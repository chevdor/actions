name: "GPG Sign"
description: "Use GPG to sign some artifacts"
author: chevdor
branding:
  icon: "umbrella"
  color: "blue"

inputs:
  key:
    description: >
      GPG Public Key
    required: true

  sig_file:
    description: >
      The file containing the signature
    required: true

  file:
    description: >
      The file that was signeds
    required: false

outputs:
  result:
    description: >
      Whether the verification passes or not
    value: ${{ steps.gpg_verify.outputs.result }}

runs:
  using: "composite"
  steps:
    - name: Install Tooling
      shell: bash
      run: |
        gpg --version

    - name: GPG Verify Signature
      id: gpg_verify
      continue-on-error: true
      shell: bash
      env:
        GPG_PUBLIC_KEY: ${{ inputs.key }}
        SIG_FILE: ${{ inputs.sig_file }}
        FILE: ${{ inputs.file }}
      run: |

        # import public key
        echo "::group::Import Key"
        echo "Import public key"
        echo "$GPG_PUBLIC_KEY" | gpg --import

        # show list of keys
        echo "Show keys"
        gpg -k
        gpg --armor --export
        echo "::endgroup::"

        # verify signature
        echo "::group::Verify signature of ${FILE}"
        if [ -z "$FILE" ]; then
          echo "Checking signature file: ${SIG_FILE}"
          gpg --verify "${SIG_FILE}"
        else
          echo "Checking signature file: ${SIG_FILE} against file: ${FILE}"
          gpg --verify "${SIG_FILE}" "${FILE}"
        fi
        res=$?

        echo "result: ${res}"
        echo "result=${res}" >> $GITHUB_OUTPUT
        echo "::endgroup::"

        # return signature file
